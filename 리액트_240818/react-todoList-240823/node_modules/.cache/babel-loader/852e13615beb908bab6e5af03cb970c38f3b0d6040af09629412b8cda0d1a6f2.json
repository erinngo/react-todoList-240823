{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/HK_local/test-new/src/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nconst Main = () => {\n  _s();\n  const [theme, setTheme] = useState(darkTheme); // 초기 테마 설정\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === lightTheme ? darkTheme : lightTheme);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(App, {\n      toggleTheme: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"PERTOzHjw2Beuv8Sm6p0fxSRqYQ=\");\n_c = Main;\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 5\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","ReactDOM","App","ThemeProvider","lightTheme","darkTheme","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","Main","_s","theme","setTheme","toggleTheme","prevTheme","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","render","StrictMode","$RefreshReg$"],"sources":["/Users/imac/Documents/HK_local/test-new/src/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nimport App from \"./App\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement);\n\nconst Main = () => {\n    const [theme, setTheme] = useState(darkTheme); // 초기 테마 설정\n\n    const toggleTheme = () => {\n        setTheme((prevTheme) => (prevTheme === lightTheme ? darkTheme : lightTheme));\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <App toggleTheme={toggleTheme} />\n        </ThemeProvider>\n    );\n};\n\nroot.render(\n    <React.StrictMode>\n        <Main />\n    </React.StrictMode>\n);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AAEvC,OAAOC,GAAG,MAAM,OAAO;AAEvB,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,UAAU,EAAEC,SAAS,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAgB,CAAC;AAEhF,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACK,SAAS,CAAC,CAAC,CAAC;;EAE/C,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAAEE,SAAS,IAAMA,SAAS,KAAKb,UAAU,GAAGC,SAAS,GAAGD,UAAW,CAAC;EAChF,CAAC;EAED,oBACIG,OAAA,CAACJ,aAAa;IAACW,KAAK,EAAEA,KAAM;IAAAI,QAAA,eACxBX,OAAA,CAACL,GAAG;MAACc,WAAW,EAAEA;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAExB,CAAC;AAACT,EAAA,CAZID,IAAI;AAAAW,EAAA,GAAJX,IAAI;AAcVJ,IAAI,CAACgB,MAAM,eACPjB,OAAA,CAACR,KAAK,CAAC0B,UAAU;EAAAP,QAAA,eACbX,OAAA,CAACK,IAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACM,CACtB,CAAC;AAAC,IAAAC,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}