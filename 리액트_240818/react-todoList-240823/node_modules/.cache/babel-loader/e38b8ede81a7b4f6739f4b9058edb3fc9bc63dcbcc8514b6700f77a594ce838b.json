{"ast":null,"code":"import React from\"react\";import{useRecoilValue,useRecoilState,useSetRecoilState}from\"recoil\";import CreateToDo from\"./CreateToDo\";import{toDoState,toDoSelector,categoryState,Categories}from\"./atoms\";import ToDo from\"./ToDo\";import styled from\"styled-components\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const H1=styled.h1`\n    font-size: 30px;\n`;const Select=styled.select`\n    font-size: 20px;\n    margin: 10px 0;\n`;function ToDoList(){//1. get the data from Atom, 2. modify the data of Atom\n// const toDos = useRecoilValue(toDoState);\n// const selectorOutput = useRecoilValue(toDoSelector);\n//여전히 atom -- toDoState에 모든 값이 들어있지만, 최종 selector에서 값을 가져온다.\nconst toDos=useRecoilValue(toDoSelector);//리셋을 위한 장치로 새롭게 추가\nconst setToDos=useSetRecoilState(toDoState);const[category,setCategory]=useRecoilState(categoryState);const onInput=event=>{const{currentTarget:{value}}=event;//value는 select의 속성값\nsetCategory(value);};// console.log(toDos);\nconst resetData=()=>{// Recoil 상태를 빈 배열로 리셋\nsetToDos([]);localStorage.removeItem(\"toDos\");// setFormState((prev) => !prev);\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(H1,{children:\"Todo List\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\"},children:[/*#__PURE__*/_jsxs(Select,{value:category,onInput:onInput,children:[/*#__PURE__*/_jsx(\"option\",{value:Categories.TO_DO,children:\"To Do\"}),/*#__PURE__*/_jsx(\"option\",{value:Categories.DOING,children:\"Doing\"}),/*#__PURE__*/_jsx(\"option\",{value:Categories.DONE,children:\"Done\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetData,children:\"reset\"})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(CreateToDo,{}),toDos===null||toDos===void 0?void 0:toDos.map(toDo=>/*#__PURE__*/_jsx(ToDo,{...toDo},toDo.id))]});}//React.ChangeEventHandler<HTMLInputElement>\nexport default ToDoList;","map":{"version":3,"names":["React","useRecoilValue","useRecoilState","useSetRecoilState","CreateToDo","toDoState","toDoSelector","categoryState","Categories","ToDo","styled","jsx","_jsx","jsxs","_jsxs","H1","h1","Select","select","ToDoList","toDos","setToDos","category","setCategory","onInput","event","currentTarget","value","resetData","localStorage","removeItem","children","style","display","justifyContent","TO_DO","DOING","DONE","onClick","map","toDo","id"],"sources":["/Users/imac/Documents/HK_local/리액트_240818/react-todoList-240823/src/components/ToDoList.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { useRecoilValue, useRecoilState, useSetRecoilState } from \"recoil\";\nimport CreateToDo from \"./CreateToDo\";\nimport { toDoState, toDoSelector, categoryState, Categories } from \"./atoms\";\nimport ToDo from \"./ToDo\";\n\nimport styled from \"styled-components\";\n\nconst H1 = styled.h1`\n    font-size: 30px;\n`;\nconst Select = styled.select`\n    font-size: 20px;\n    margin: 10px 0;\n`;\nfunction ToDoList() {\n    //1. get the data from Atom, 2. modify the data of Atom\n\n    // const toDos = useRecoilValue(toDoState);\n    // const selectorOutput = useRecoilValue(toDoSelector);\n\n    //여전히 atom -- toDoState에 모든 값이 들어있지만, 최종 selector에서 값을 가져온다.\n\n    const toDos = useRecoilValue(toDoSelector);\n    //리셋을 위한 장치로 새롭게 추가\n    const setToDos = useSetRecoilState(toDoState);\n    const [category, setCategory] = useRecoilState(categoryState);\n\n    const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n        const {\n            currentTarget: { value },\n        } = event;\n\n        //value는 select의 속성값\n        setCategory(value as any);\n    };\n    // console.log(toDos);\n\n    const resetData = () => {\n        // Recoil 상태를 빈 배열로 리셋\n        setToDos([]);\n        localStorage.removeItem(\"toDos\");\n        // setFormState((prev) => !prev);\n    };\n    return (\n        <div>\n            <H1>Todo List</H1>\n            <hr />\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Select value={category} onInput={onInput}>\n                    <option value={Categories.TO_DO}>To Do</option>\n                    <option value={Categories.DOING}>Doing</option>\n                    <option value={Categories.DONE}>Done</option>\n                </Select>\n                <button onClick={resetData}>reset</button>\n            </div>\n            <hr />\n            <CreateToDo />\n\n            {toDos?.map((toDo) => (\n                <ToDo key={toDo.id} {...toDo} />\n            ))}\n            {/* {category === \"TO_DO\" && toDo.map((toDo) => <ToDo key={toDo.id} {...toDo} />)}\n            {category === \"DOING\" && doing.map((toDo) => <ToDo key={toDo.id} {...toDo} />)}\n            {category === \"DONE\" && done.map((toDo) => <ToDo key={toDo.id} {...toDo} />)} */}\n        </div>\n    );\n}\n\n//React.ChangeEventHandler<HTMLInputElement>\n\nexport default ToDoList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,cAAc,CAAEC,cAAc,CAAEC,iBAAiB,KAAQ,QAAQ,CAC1E,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,OAASC,SAAS,CAAEC,YAAY,CAAEC,aAAa,CAAEC,UAAU,KAAQ,SAAS,CAC5E,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAEzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,KAAM,CAAAC,EAAE,CAAGL,MAAM,CAACM,EAAE;AACpB;AACA,CAAC,CACD,KAAM,CAAAC,MAAM,CAAGP,MAAM,CAACQ,MAAM;AAC5B;AACA;AACA,CAAC,CACD,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAChB;AAEA;AACA;AAEA;AAEA,KAAM,CAAAC,KAAK,CAAGnB,cAAc,CAACK,YAAY,CAAC,CAC1C;AACA,KAAM,CAAAe,QAAQ,CAAGlB,iBAAiB,CAACE,SAAS,CAAC,CAC7C,KAAM,CAACiB,QAAQ,CAAEC,WAAW,CAAC,CAAGrB,cAAc,CAACK,aAAa,CAAC,CAE7D,KAAM,CAAAiB,OAAO,CAAIC,KAAyC,EAAK,CAC3D,KAAM,CACFC,aAAa,CAAE,CAAEC,KAAM,CAC3B,CAAC,CAAGF,KAAK,CAET;AACAF,WAAW,CAACI,KAAY,CAAC,CAC7B,CAAC,CACD;AAEA,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACpB;AACAP,QAAQ,CAAC,EAAE,CAAC,CACZQ,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAChC;AACJ,CAAC,CACD,mBACIhB,KAAA,QAAAiB,QAAA,eACInB,IAAA,CAACG,EAAE,EAAAgB,QAAA,CAAC,WAAS,CAAI,CAAC,cAClBnB,IAAA,QAAK,CAAC,cACNE,KAAA,QAAKkB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAgB,CAAE,CAAAH,QAAA,eAC7DjB,KAAA,CAACG,MAAM,EAACU,KAAK,CAAEL,QAAS,CAACE,OAAO,CAAEA,OAAQ,CAAAO,QAAA,eACtCnB,IAAA,WAAQe,KAAK,CAAEnB,UAAU,CAAC2B,KAAM,CAAAJ,QAAA,CAAC,OAAK,CAAQ,CAAC,cAC/CnB,IAAA,WAAQe,KAAK,CAAEnB,UAAU,CAAC4B,KAAM,CAAAL,QAAA,CAAC,OAAK,CAAQ,CAAC,cAC/CnB,IAAA,WAAQe,KAAK,CAAEnB,UAAU,CAAC6B,IAAK,CAAAN,QAAA,CAAC,MAAI,CAAQ,CAAC,EACzC,CAAC,cACTnB,IAAA,WAAQ0B,OAAO,CAAEV,SAAU,CAAAG,QAAA,CAAC,OAAK,CAAQ,CAAC,EACzC,CAAC,cACNnB,IAAA,QAAK,CAAC,cACNA,IAAA,CAACR,UAAU,GAAE,CAAC,CAEbgB,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEmB,GAAG,CAAEC,IAAI,eACb5B,IAAA,CAACH,IAAI,KAAmB+B,IAAI,EAAjBA,IAAI,CAACC,EAAe,CAClC,CAAC,EAID,CAAC,CAEd,CAEA;AAEA,cAAe,CAAAtB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}