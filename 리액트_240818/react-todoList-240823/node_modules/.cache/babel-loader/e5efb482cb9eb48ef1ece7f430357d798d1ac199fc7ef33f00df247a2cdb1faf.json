{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/HK_local/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173_240818/src/components/ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport CreateToDo from \"./CreateToDo\";\nimport { toDoSelector, categoryState, Categories } from \"./atoms\";\nimport ToDo from \"./ToDo\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst H1 = styled.h1`\n    font-size: 30px;\n`;\n_c = H1;\nconst Select = styled.select`\n    font-size: 20px;\n    margin: 10px 0;\n`;\n_c2 = Select;\nfunction ToDoList() {\n  _s();\n  //1. get the data from Atom, 2. modify the data of Atom\n\n  // const toDos = useRecoilValue(toDoState);\n  // const selectorOutput = useRecoilValue(toDoSelector);\n\n  //여전히 atom -- toDoState에 모든 값이 들어있지만, 최종 selector에서 값을 가져온다.\n  const toDos = useRecoilValue(toDoSelector);\n  const [category, setCategory] = useRecoilState(categoryState);\n  const onInput = event => {\n    const {\n      currentTarget: {\n        value\n      }\n    } = event;\n    setCategory(value);\n  };\n  console.log(toDos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(H1, {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: category,\n      onInput: onInput,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: Categories.TO_DO,\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: Categories.DOING,\n        children: \"Doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: Categories.DONE,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateToDo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), toDos === null || toDos === void 0 ? void 0 : toDos.map(toDo => /*#__PURE__*/_jsxDEV(ToDo, {\n      ...toDo\n    }, toDo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n//React.ChangeEventHandler<HTMLInputElement>\n_s(ToDoList, \"jqo8iKqZeaDS8yPzs1/7tuj3xQw=\", false, function () {\n  return [useRecoilValue, useRecoilState];\n});\n_c3 = ToDoList;\nexport default ToDoList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"H1\");\n$RefreshReg$(_c2, \"Select\");\n$RefreshReg$(_c3, \"ToDoList\");","map":{"version":3,"names":["React","useRecoilValue","useRecoilState","CreateToDo","toDoSelector","categoryState","Categories","ToDo","styled","jsxDEV","_jsxDEV","H1","h1","_c","Select","select","_c2","ToDoList","_s","toDos","category","setCategory","onInput","event","currentTarget","value","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","TO_DO","DOING","DONE","map","toDo","id","_c3","$RefreshReg$"],"sources":["/Users/imac/Documents/HK_local/리액트_240818/src/components/ToDoList.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport CreateToDo from \"./CreateToDo\";\nimport { toDoState, toDoSelector, categoryState, Categories } from \"./atoms\";\nimport ToDo from \"./ToDo\";\n\nimport styled from \"styled-components\";\n\nconst H1 = styled.h1`\n    font-size: 30px;\n`;\nconst Select = styled.select`\n    font-size: 20px;\n    margin: 10px 0;\n`;\nfunction ToDoList() {\n    //1. get the data from Atom, 2. modify the data of Atom\n\n    // const toDos = useRecoilValue(toDoState);\n    // const selectorOutput = useRecoilValue(toDoSelector);\n\n    //여전히 atom -- toDoState에 모든 값이 들어있지만, 최종 selector에서 값을 가져온다.\n    const toDos = useRecoilValue(toDoSelector);\n    const [category, setCategory] = useRecoilState(categoryState);\n\n    const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n        const {\n            currentTarget: { value },\n        } = event;\n        setCategory(value as any);\n    };\n    console.log(toDos);\n    return (\n        <div>\n            <H1>Todo List</H1>\n            <hr />\n            <Select value={category} onInput={onInput}>\n                <option value={Categories.TO_DO}>To Do</option>\n                <option value={Categories.DOING}>Doing</option>\n                <option value={Categories.DONE}>Done</option>\n            </Select>\n            <CreateToDo />\n            {/* <h2>To Do</h2>\n            <ul>\n                {toDo.map((toDo) => (\n                    // <ToDo text={toDo.text} category ={toDo.category}/>\n                    <ToDo key={toDo.id} {...toDo} />\n                ))}\n            </ul>\n            <hr />\n            <h2>Doing</h2>\n            <ul>\n                {doing.map((toDo) => (\n                    // <ToDo text={toDo.text} category ={toDo.category}/>\n                    <ToDo key={toDo.id} {...toDo} />\n                ))}\n            </ul>\n            <hr />\n            <h2>Done</h2>\n            <ul>\n                {done.map((toDo) => (\n                    // <ToDo text={toDo.text} category ={toDo.category}/>\n                    <ToDo key={toDo.id} {...toDo} />\n                ))}\n            </ul> */}\n\n            {toDos?.map((toDo) => (\n                <ToDo key={toDo.id} {...toDo} />\n            ))}\n            {/* {category === \"TO_DO\" && toDo.map((toDo) => <ToDo key={toDo.id} {...toDo} />)}\n            {category === \"DOING\" && doing.map((toDo) => <ToDo key={toDo.id} {...toDo} />)}\n            {category === \"DONE\" && done.map((toDo) => <ToDo key={toDo.id} {...toDo} />)} */}\n        </div>\n    );\n}\n\n//React.ChangeEventHandler<HTMLInputElement>\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}