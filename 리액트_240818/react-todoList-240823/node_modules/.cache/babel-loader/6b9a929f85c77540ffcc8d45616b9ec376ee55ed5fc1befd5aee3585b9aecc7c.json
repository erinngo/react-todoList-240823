{"ast":null,"code":"import { atom, selector } from \"recoil\";\n\n// type categories = \"TO_DO\" | \"DOING\" | \"DONE\";\n//enumarable\nvar Categories = /*#__PURE__*/function (Categories) {\n  Categories[Categories[\"TO_DO\"] = 0] = \"TO_DO\";\n  Categories[Categories[\"DOING\"] = 1] = \"DOING\";\n  Categories[Categories[\"DONE\"] = 2] = \"DONE\";\n  return Categories;\n}(Categories || {});\nexport const categoryState = atom({\n  key: \"category\",\n  default: \"TO_DO\"\n});\nexport const toDoState = atom({\n  key: \"toDo\",\n  default: []\n});\n\n//atom은 배열을 만들어줄 뿐이고\n//selector는 atom을 받아서 output을 변형시킨다. ----derived state\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({\n    get\n  }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    if (category === \"TO_DO\") return toDos.filter(toDo => toDo.category === \"TO_DO\");\n    if (category === \"DOING\") return toDos.filter(toDo => toDo.category === \"DOING\");\n    if (category === \"DONE\") return toDos.filter(toDo => toDo.category === \"DOING\");\n\n    // return [toDos.filter((toDo) => toDo.category === \"TO_DO\"), toDos.filter((toDo) => toDo.category === \"DOING\"), toDos.filter((toDo) => toDo.category === \"DONE\")];\n  }\n});","map":{"version":3,"names":["atom","selector","Categories","categoryState","key","default","toDoState","toDoSelector","get","toDos","category","filter","toDo"],"sources":["/Users/imac/Documents/HK_local/리액트_240818/src/components/atoms.tsx"],"sourcesContent":["import { atom, selector } from \"recoil\";\n\n// type categories = \"TO_DO\" | \"DOING\" | \"DONE\";\n//enumarable\nenum Categories {\n    \"TO_DO\",\n    \"DOING\",\n    \"DONE\",\n}\nexport interface IToDo {\n    text: string;\n    id: number;\n    category: categories;\n}\n\nexport const categoryState = atom<categories>({\n    key: \"category\",\n    default: \"TO_DO\",\n});\n\nexport const toDoState = atom<IToDo[]>({\n    key: \"toDo\",\n    default: [],\n});\n\n//atom은 배열을 만들어줄 뿐이고\n//selector는 atom을 받아서 output을 변형시킨다. ----derived state\n\nexport const toDoSelector = selector({\n    key: \"toDoSelector\",\n    get: ({ get }) => {\n        const toDos = get(toDoState);\n        const category = get(categoryState);\n\n        if (category === \"TO_DO\") return toDos.filter((toDo) => toDo.category === \"TO_DO\");\n        if (category === \"DOING\") return toDos.filter((toDo) => toDo.category === \"DOING\");\n        if (category === \"DONE\") return toDos.filter((toDo) => toDo.category === \"DOING\");\n\n        // return [toDos.filter((toDo) => toDo.category === \"TO_DO\"), toDos.filter((toDo) => toDo.category === \"DOING\"), toDos.filter((toDo) => toDo.category === \"DONE\")];\n    },\n});\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,QAAQ;;AAEvC;AACA;AAAA,IACKC,UAAU,0BAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA,EAAVA,UAAU;AAWf,OAAO,MAAMC,aAAa,GAAGH,IAAI,CAAa;EAC1CI,GAAG,EAAE,UAAU;EACfC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGN,IAAI,CAAU;EACnCI,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF;AACA;;AAEA,OAAO,MAAME,YAAY,GAAGN,QAAQ,CAAC;EACjCG,GAAG,EAAE,cAAc;EACnBI,GAAG,EAAEA,CAAC;IAAEA;EAAI,CAAC,KAAK;IACd,MAAMC,KAAK,GAAGD,GAAG,CAACF,SAAS,CAAC;IAC5B,MAAMI,QAAQ,GAAGF,GAAG,CAACL,aAAa,CAAC;IAEnC,IAAIO,QAAQ,KAAK,OAAO,EAAE,OAAOD,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,QAAQ,KAAK,OAAO,CAAC;IAClF,IAAIA,QAAQ,KAAK,OAAO,EAAE,OAAOD,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,QAAQ,KAAK,OAAO,CAAC;IAClF,IAAIA,QAAQ,KAAK,MAAM,EAAE,OAAOD,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,QAAQ,KAAK,OAAO,CAAC;;IAEjF;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}