{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/HK_local/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173_240818/react-todoList-240823/src/components/ToDo.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { toDoState, Categories } from \"./atoms\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Li = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    /* margin: 20px; */\n    border-bottom: 1px solid #f1f1f1;\n    padding-bottom: 10px;\n    width: 100%;\n    box-sizing: border-box;\n    span {\n        width: 50%;\n        display: inline-block;\n        padding: 10px;\n    }\n    span:nth-of-type(2) {\n        width: 50%;\n        border: 1px solid blue;\n\n        display: flex;\n        align-items: center;\n    }\n`;\n_c = Li;\nconst Button = styled.button`\n    font-size: 1em;\n    color: #fff;\n    border: none;\n    border-radius: 20px;\n    padding: 5px 10px;\n    margin: 5px;\n    width: 30%;\n`;\n_c2 = Button;\nfunction ToDo({\n  text,\n  category,\n  id\n}) {\n  _s();\n  //toDoState에는 모든 toDo 들이 들어있다.\n  const setToDos = useSetRecoilState(toDoState);\n\n  // 작동시 카테고리 변경작업 필요\n\n  const onClickT = event => {\n    //1. 현재 버튼의 카테고리 추출   - TO_DO, DOING, DONE, DELETE\n    const {\n      currentTarget: {\n        name\n      }\n    } = event;\n    console.log(name);\n\n    // 2. 현재 클릭한 버튼의 index 추출\n\n    if (name === Categories.DELETE) {\n      setToDos(oldToDos => {\n        const finalToDos = oldToDos.filter(each => each.id !== id);\n        // 로컬 스토리지 업데이트\n        localStorage.setItem(\"toDos\", JSON.stringify(finalToDos));\n        return finalToDos; // 최종 ToDo 리스트 반환\n      });\n    } else {\n      setToDos(oldToDos => {\n        const targetIndex = oldToDos.findIndex(each => each.id === id);\n        const oldToDo = oldToDos[targetIndex];\n\n        // 새로운 ToDo 객체 생성  -- category 만 변경\n        const newToDo = {\n          text: oldToDo.text,\n          id: oldToDo.id,\n          category: name\n        };\n        const front = oldToDos.slice(0, targetIndex);\n        const back = oldToDos.slice(targetIndex + 1);\n        const finalToDos = [...front, newToDo, ...back];\n\n        // 로컬 스토리지 업데이트\n        localStorage.setItem(\"toDos\", JSON.stringify(finalToDos));\n        return finalToDos; // 최종 ToDo 리스트 반환\n      });\n    }\n  };\n\n  // const resetToDos = () => {\n  //     setToDos([]); // toDoState를 빈 배열로 설정\n  //     localStorage.setItem(\"toDos\", JSON.stringify([])); // 로컬 스토리지도 빈 배열로 업데이트\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Li, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [category !== Categories.DOING && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#f19a39\"\n        },\n        name: Categories.DOING + \"\",\n        onClick: onClickT,\n        children: \"Doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), category !== Categories.TO_DO && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#8d8e8d\"\n        },\n        name: Categories.TO_DO + \"\",\n        onClick: onClickT,\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), category !== Categories.DONE && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#67c467\"\n        },\n        name: Categories.DONE + \"\",\n        onClick: onClickT,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), category !== Categories.DELETE && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#c2c5c2\"\n        },\n        name: Categories.DELETE + \"\",\n        onClick: onClickT,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDo, \"BR93yBPF8CYIHT/jsK8zidf9OVI=\", false, function () {\n  return [useSetRecoilState];\n});\n_c3 = ToDo;\nexport default ToDo;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Li\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"ToDo\");","map":{"version":3,"names":["React","toDoState","Categories","useSetRecoilState","styled","jsxDEV","_jsxDEV","Li","li","_c","Button","button","_c2","ToDo","text","category","id","_s","setToDos","onClickT","event","currentTarget","name","console","log","DELETE","oldToDos","finalToDos","filter","each","localStorage","setItem","JSON","stringify","targetIndex","findIndex","oldToDo","newToDo","front","slice","back","children","fileName","_jsxFileName","lineNumber","columnNumber","DOING","style","backgroundColor","onClick","TO_DO","DONE","_c3","$RefreshReg$"],"sources":["/Users/imac/Documents/HK_local/리액트_240818/react-todoList-240823/src/components/ToDo.tsx"],"sourcesContent":["import React from \"react\";\nimport { IToDo, toDoState, Categories } from \"./atoms\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\n\nconst Li = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    /* margin: 20px; */\n    border-bottom: 1px solid #f1f1f1;\n    padding-bottom: 10px;\n    width: 100%;\n    box-sizing: border-box;\n    span {\n        width: 50%;\n        display: inline-block;\n        padding: 10px;\n    }\n    span:nth-of-type(2) {\n        width: 50%;\n        border: 1px solid blue;\n\n        display: flex;\n        align-items: center;\n    }\n`;\nconst Button = styled.button`\n    font-size: 1em;\n    color: #fff;\n    border: none;\n    border-radius: 20px;\n    padding: 5px 10px;\n    margin: 5px;\n    width: 30%;\n`;\n\nfunction ToDo({ text, category, id }: IToDo) {\n    //toDoState에는 모든 toDo 들이 들어있다.\n    const setToDos = useSetRecoilState(toDoState);\n\n    // 작동시 카테고리 변경작업 필요\n\n    const onClickT = (event: React.MouseEvent<HTMLButtonElement>) => {\n        //1. 현재 버튼의 카테고리 추출   - TO_DO, DOING, DONE, DELETE\n        const {\n            currentTarget: { name },\n        } = event;\n\n        console.log(name);\n\n        // 2. 현재 클릭한 버튼의 index 추출\n\n        if (name === Categories.DELETE) {\n            setToDos((oldToDos) => {\n                const finalToDos = oldToDos.filter((each) => each.id !== id);\n                // 로컬 스토리지 업데이트\n                localStorage.setItem(\"toDos\", JSON.stringify(finalToDos));\n                return finalToDos; // 최종 ToDo 리스트 반환\n            });\n        } else {\n            setToDos((oldToDos) => {\n                const targetIndex = oldToDos.findIndex((each) => each.id === id);\n                const oldToDo = oldToDos[targetIndex];\n\n                // 새로운 ToDo 객체 생성  -- category 만 변경\n                const newToDo = { text: oldToDo.text, id: oldToDo.id, category: name as any };\n\n                const front = oldToDos.slice(0, targetIndex);\n                const back = oldToDos.slice(targetIndex + 1);\n                const finalToDos = [...front, newToDo, ...back];\n\n                // 로컬 스토리지 업데이트\n                localStorage.setItem(\"toDos\", JSON.stringify(finalToDos));\n                return finalToDos; // 최종 ToDo 리스트 반환\n            });\n        }\n    };\n\n    // const resetToDos = () => {\n    //     setToDos([]); // toDoState를 빈 배열로 설정\n    //     localStorage.setItem(\"toDos\", JSON.stringify([])); // 로컬 스토리지도 빈 배열로 업데이트\n    // };\n\n    return (\n        <Li>\n            <span>{text}</span>\n            <span>\n                {category !== Categories.DOING && (\n                    <Button style={{ backgroundColor: \"#f19a39\" }} name={Categories.DOING + \"\"} onClick={onClickT}>\n                        Doing\n                    </Button>\n                )}\n                {category !== Categories.TO_DO && (\n                    <Button style={{ backgroundColor: \"#8d8e8d\" }} name={Categories.TO_DO + \"\"} onClick={onClickT}>\n                        To Do\n                    </Button>\n                )}\n                {category !== Categories.DONE && (\n                    <Button style={{ backgroundColor: \"#67c467\" }} name={Categories.DONE + \"\"} onClick={onClickT}>\n                        Done\n                    </Button>\n                )}\n                {category !== Categories.DELETE && (\n                    <Button style={{ backgroundColor: \"#c2c5c2\" }} name={Categories.DELETE + \"\"} onClick={onClickT}>\n                        Delete\n                    </Button>\n                )}\n            </span>\n        </Li>\n    );\n}\n\nexport default ToDo;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAgBC,SAAS,EAAEC,UAAU,QAAQ,SAAS;AACtD,SAASC,iBAAiB,QAAQ,QAAQ;AAC1C,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,EAAE,GAAGH,MAAM,CAACI,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GArBIF,EAAE;AAsBR,MAAMG,MAAM,GAAGN,MAAM,CAACO,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,MAAM;AAUZ,SAASG,IAAIA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACzC;EACA,MAAMC,QAAQ,GAAGf,iBAAiB,CAACF,SAAS,CAAC;;EAE7C;;EAEA,MAAMkB,QAAQ,GAAIC,KAA0C,IAAK;IAC7D;IACA,MAAM;MACFC,aAAa,EAAE;QAAEC;MAAK;IAC1B,CAAC,GAAGF,KAAK;IAETG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;;IAEjB;;IAEA,IAAIA,IAAI,KAAKpB,UAAU,CAACuB,MAAM,EAAE;MAC5BP,QAAQ,CAAEQ,QAAQ,IAAK;QACnB,MAAMC,UAAU,GAAGD,QAAQ,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKA,EAAE,CAAC;QAC5D;QACAc,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,UAAU,CAAC,CAAC;QACzD,OAAOA,UAAU,CAAC,CAAC;MACvB,CAAC,CAAC;IACN,CAAC,MAAM;MACHT,QAAQ,CAAEQ,QAAQ,IAAK;QACnB,MAAMQ,WAAW,GAAGR,QAAQ,CAACS,SAAS,CAAEN,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKA,EAAE,CAAC;QAChE,MAAMoB,OAAO,GAAGV,QAAQ,CAACQ,WAAW,CAAC;;QAErC;QACA,MAAMG,OAAO,GAAG;UAAEvB,IAAI,EAAEsB,OAAO,CAACtB,IAAI;UAAEE,EAAE,EAAEoB,OAAO,CAACpB,EAAE;UAAED,QAAQ,EAAEO;QAAY,CAAC;QAE7E,MAAMgB,KAAK,GAAGZ,QAAQ,CAACa,KAAK,CAAC,CAAC,EAAEL,WAAW,CAAC;QAC5C,MAAMM,IAAI,GAAGd,QAAQ,CAACa,KAAK,CAACL,WAAW,GAAG,CAAC,CAAC;QAC5C,MAAMP,UAAU,GAAG,CAAC,GAAGW,KAAK,EAAED,OAAO,EAAE,GAAGG,IAAI,CAAC;;QAE/C;QACAV,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,UAAU,CAAC,CAAC;QACzD,OAAOA,UAAU,CAAC,CAAC;MACvB,CAAC,CAAC;IACN;EACJ,CAAC;;EAED;EACA;EACA;EACA;;EAEA,oBACIrB,OAAA,CAACC,EAAE;IAAAkC,QAAA,gBACCnC,OAAA;MAAAmC,QAAA,EAAO3B;IAAI;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnBvC,OAAA;MAAAmC,QAAA,GACK1B,QAAQ,KAAKb,UAAU,CAAC4C,KAAK,iBAC1BxC,OAAA,CAACI,MAAM;QAACqC,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAU,CAAE;QAAC1B,IAAI,EAAEpB,UAAU,CAAC4C,KAAK,GAAG,EAAG;QAACG,OAAO,EAAE9B,QAAS;QAAAsB,QAAA,EAAC;MAE/F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACX,EACA9B,QAAQ,KAAKb,UAAU,CAACgD,KAAK,iBAC1B5C,OAAA,CAACI,MAAM;QAACqC,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAU,CAAE;QAAC1B,IAAI,EAAEpB,UAAU,CAACgD,KAAK,GAAG,EAAG;QAACD,OAAO,EAAE9B,QAAS;QAAAsB,QAAA,EAAC;MAE/F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACX,EACA9B,QAAQ,KAAKb,UAAU,CAACiD,IAAI,iBACzB7C,OAAA,CAACI,MAAM;QAACqC,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAU,CAAE;QAAC1B,IAAI,EAAEpB,UAAU,CAACiD,IAAI,GAAG,EAAG;QAACF,OAAO,EAAE9B,QAAS;QAAAsB,QAAA,EAAC;MAE9F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACX,EACA9B,QAAQ,KAAKb,UAAU,CAACuB,MAAM,iBAC3BnB,OAAA,CAACI,MAAM;QAACqC,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAU,CAAE;QAAC1B,IAAI,EAAEpB,UAAU,CAACuB,MAAM,GAAG,EAAG;QAACwB,OAAO,EAAE9B,QAAS;QAAAsB,QAAA,EAAC;MAEhG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACX;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEb;AAAC5B,EAAA,CA1EQJ,IAAI;EAAA,QAEQV,iBAAiB;AAAA;AAAAiD,GAAA,GAF7BvC,IAAI;AA4Eb,eAAeA,IAAI;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAwC,GAAA;AAAAC,YAAA,CAAA5C,EAAA;AAAA4C,YAAA,CAAAzC,GAAA;AAAAyC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}