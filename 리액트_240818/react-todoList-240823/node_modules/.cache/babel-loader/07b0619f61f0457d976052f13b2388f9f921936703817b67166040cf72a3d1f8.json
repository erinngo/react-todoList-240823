{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Downloads/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173_240818/src/components/ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport CreateToDo from \"./CreateToDo\";\nimport { toDoSelector } from \"./atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  //1. get the data from Atom, 2. modify the data of Atom\n\n  // const toDos = useRecoilValue(toDoState);\n  // const selectorOutput = useRecoilValue(toDoSelector);\n\n  //여전히 atom -- toDoState에 모든 값이 들어있지만, 최종 selector에서 값을 가져온다.\n  const [toDo, doing, done] = useRecoilValue(toDoSelector);\n  const onInput = event => {\n    const {\n      currentTarget: {\n        value\n      }\n    } = event;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Dos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onInput: onInput,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"TO_DO\",\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"DOING\",\n        children: \"Doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"DONE\",\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateToDo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n//React.ChangeEventHandler<HTMLInputElement>\n_s(ToDoList, \"QvyPt6Pd81PMOwKU5XwmCW07MeE=\", false, function () {\n  return [useRecoilValue];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useRecoilValue","CreateToDo","toDoSelector","jsxDEV","_jsxDEV","ToDoList","_s","toDo","doing","done","onInput","event","currentTarget","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/imac/Downloads/리액트_240818/src/components/ToDoList.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { useForm } from \"react-hook-form\";\nimport { useRecoilValue } from \"recoil\";\nimport CreateToDo from \"./CreateToDo\";\nimport { toDoState, toDoSelector, categoryState } from \"./atoms\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n    //1. get the data from Atom, 2. modify the data of Atom\n\n    // const toDos = useRecoilValue(toDoState);\n    // const selectorOutput = useRecoilValue(toDoSelector);\n\n    //여전히 atom -- toDoState에 모든 값이 들어있지만, 최종 selector에서 값을 가져온다.\n    const [toDo, doing, done] = useRecoilValue(toDoSelector);\n\n    const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n        const {\n            currentTarget: { value },\n        } = event;\n    };\n\n    return (\n        <div>\n            <h1>To Dos</h1>\n            <hr />\n            <select onInput={onInput}>\n                <option value=\"TO_DO\">To Do</option>\n                <option value=\"DOING\">Doing</option>\n                <option value=\"DONE\">Done</option>\n            </select>\n            <CreateToDo />\n            {/* <h2>To Do</h2>\n            <ul>\n                {toDo.map((toDo) => (\n                    // <ToDo text={toDo.text} category ={toDo.category}/>\n                    <ToDo key={toDo.id} {...toDo} />\n                ))}\n            </ul>\n            <hr />\n            <h2>Doing</h2>\n            <ul>\n                {doing.map((toDo) => (\n                    // <ToDo text={toDo.text} category ={toDo.category}/>\n                    <ToDo key={toDo.id} {...toDo} />\n                ))}\n            </ul>\n            <hr />\n            <h2>Done</h2>\n            <ul>\n                {done.map((toDo) => (\n                    // <ToDo text={toDo.text} category ={toDo.category}/>\n                    <ToDo key={toDo.id} {...toDo} />\n                ))}\n            </ul> */}\n        </div>\n    );\n}\n\n//React.ChangeEventHandler<HTMLInputElement>\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,cAAc,QAAQ,QAAQ;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAAoBC,YAAY,QAAuB,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjE,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB;;EAEA;EACA;;EAEA;EACA,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,IAAI,CAAC,GAAGT,cAAc,CAACE,YAAY,CAAC;EAExD,MAAMQ,OAAO,GAAIC,KAAyC,IAAK;IAC3D,MAAM;MACFC,aAAa,EAAE;QAAEC;MAAM;IAC3B,CAAC,GAAGF,KAAK;EACb,CAAC;EAED,oBACIP,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfd,OAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNd,OAAA;MAAQM,OAAO,EAAEA,OAAQ;MAAAI,QAAA,gBACrBV,OAAA;QAAQS,KAAK,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpCd,OAAA;QAAQS,KAAK,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpCd,OAAA;QAAQS,KAAK,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACTd,OAAA,CAACH,UAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAwBb,CAAC;AAEd;;AAEA;AAAAZ,EAAA,CApDSD,QAAQ;EAAA,QAOeL,cAAc;AAAA;AAAAmB,EAAA,GAPrCd,QAAQ;AAsDjB,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}