{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/HK_local/test-new/src/App.tsx\",\n  _s = $RefreshSig$();\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { useState } from \"react\";\nimport Router from \"./Router\";\nimport \"./App.css\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n    html,\n    body,\n    div,\n    span,\n    applet,\n    object,\n    iframe,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    blockquote,\n    pre,\n    a,\n    abbr,\n    acronym,\n    address,\n    big,\n    cite,\n    code,\n    del,\n    dfn,\n    em,\n    img,\n    ins,\n    kbd,\n    q,\n    s,\n    samp,\n    small,\n    strike,\n    strong,\n    sub,\n    sup,\n    tt,\n    var,\n    b,\n    u,\n    i,\n    center,\n    dl,\n    dt,\n    dd,\n    menu,\n    ol,\n    ul,\n    li,\n    fieldset,\n    form,\n    label,\n    legend,\n    table,\n    caption,\n    tbody,\n    tfoot,\n    thead,\n    tr,\n    th,\n    td,\n    article,\n    aside,\n    canvas,\n    details,\n    embed,\n    figure,\n    figcaption,\n    footer,\n    header,\n    hgroup,\n    main,\n    menu,\n    nav,\n    output,\n    ruby,\n    section,\n    summary,\n    time,\n    mark,\n    audio,\n    video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n    }\n    /* HTML5 display-role reset for older browsers */\n    article,\n    aside,\n    details,\n    figcaption,\n    figure,\n    footer,\n    header,\n    hgroup,\n    main,\n    menu,\n    nav,\n    section {\n        display: block;\n    }\n    /* HTML5 hidden-attribute fix for newer browsers */\n    *[hidden] {\n        display: none;\n    }\n    body {\n        line-height: 1;\n        font-family: 'Source Sans Pro', sans-serif;\n        background-color: ${props => props.theme.bgColor};\n        color: ${props => props.theme.textColor};\n\n    }\n    menu,\n    ol,\n    ul {\n        list-style: none;\n    }\n    blockquote,\n    q {\n        quotes: none;\n    }\n    blockquote:before,\n    blockquote:after,\n    q:before,\n    q:after {\n        content: \"\";\n        content: none;\n    }\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n`;\n_c = GlobalStyle;\nconst ToggleThemeButton = styled.button`\n    font-size: 30px;\n    background: none;\n    border: none;\n`;\n// const darkTheme = {\n//     bgColor: \"rgb(50,50,50)\",\n//     textColor: \"white\",\n//     accentColor: \"#44bd32\",\n//     liColor: \"#fff\",\n// };\n\n// const lightTheme = {\n//     bgColor: \"white\",\n//     textColor: \"black\",\n//     accentColor: \"#44bd32\",\n//     liColor: \"#555\",\n// };\n_c2 = ToggleThemeButton;\nfunction App() {\n  _s();\n  const [darkmode, setDarkmode] = useState(false); // Ï¥àÍ∏∞Í∞íÏùÑ falseÎ°ú ÏÑ§Ï†ï\n\n  const toggleDarkMode = () => {\n    setDarkmode(prev => !prev); // Í∏∞Ï°¥ ÏÉÅÌÉúÎ•º Î∞òÏ†Ñ\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkmode ? darkTheme : lightTheme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToggleThemeButton, {\n      onClick: toggleDarkMode,\n      children: darkmode ? \"üåû\" : \"üåö\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"C5VNDE51K1ghhaWCmW+5mGdlUrI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"ToggleThemeButton\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["styled","createGlobalStyle","ThemeProvider","useState","Router","lightTheme","darkTheme","jsxDEV","_jsxDEV","GlobalStyle","props","theme","bgColor","textColor","_c","ToggleThemeButton","button","_c2","App","_s","darkmode","setDarkmode","toggleDarkMode","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c3","$RefreshReg$"],"sources":["/Users/imac/Documents/HK_local/test-new/src/App.tsx"],"sourcesContent":["import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { useState } from \"react\";\nimport Router from \"./Router\";\n\nimport \"./App.css\";\nimport { lightTheme, darkTheme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n    html,\n    body,\n    div,\n    span,\n    applet,\n    object,\n    iframe,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    blockquote,\n    pre,\n    a,\n    abbr,\n    acronym,\n    address,\n    big,\n    cite,\n    code,\n    del,\n    dfn,\n    em,\n    img,\n    ins,\n    kbd,\n    q,\n    s,\n    samp,\n    small,\n    strike,\n    strong,\n    sub,\n    sup,\n    tt,\n    var,\n    b,\n    u,\n    i,\n    center,\n    dl,\n    dt,\n    dd,\n    menu,\n    ol,\n    ul,\n    li,\n    fieldset,\n    form,\n    label,\n    legend,\n    table,\n    caption,\n    tbody,\n    tfoot,\n    thead,\n    tr,\n    th,\n    td,\n    article,\n    aside,\n    canvas,\n    details,\n    embed,\n    figure,\n    figcaption,\n    footer,\n    header,\n    hgroup,\n    main,\n    menu,\n    nav,\n    output,\n    ruby,\n    section,\n    summary,\n    time,\n    mark,\n    audio,\n    video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n    }\n    /* HTML5 display-role reset for older browsers */\n    article,\n    aside,\n    details,\n    figcaption,\n    figure,\n    footer,\n    header,\n    hgroup,\n    main,\n    menu,\n    nav,\n    section {\n        display: block;\n    }\n    /* HTML5 hidden-attribute fix for newer browsers */\n    *[hidden] {\n        display: none;\n    }\n    body {\n        line-height: 1;\n        font-family: 'Source Sans Pro', sans-serif;\n        background-color: ${(props) => props.theme.bgColor};\n        color: ${(props) => props.theme.textColor};\n\n    }\n    menu,\n    ol,\n    ul {\n        list-style: none;\n    }\n    blockquote,\n    q {\n        quotes: none;\n    }\n    blockquote:before,\n    blockquote:after,\n    q:before,\n    q:after {\n        content: \"\";\n        content: none;\n    }\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n`;\n\nconst ToggleThemeButton = styled.button`\n    font-size: 30px;\n    background: none;\n    border: none;\n`;\n// const darkTheme = {\n//     bgColor: \"rgb(50,50,50)\",\n//     textColor: \"white\",\n//     accentColor: \"#44bd32\",\n//     liColor: \"#fff\",\n// };\n\n// const lightTheme = {\n//     bgColor: \"white\",\n//     textColor: \"black\",\n//     accentColor: \"#44bd32\",\n//     liColor: \"#555\",\n// };\n\nfunction App() {\n    const [darkmode, setDarkmode] = useState(false); // Ï¥àÍ∏∞Í∞íÏùÑ falseÎ°ú ÏÑ§Ï†ï\n\n    const toggleDarkMode = () => {\n        setDarkmode((prev) => !prev); // Í∏∞Ï°¥ ÏÉÅÌÉúÎ•º Î∞òÏ†Ñ\n    };\n\n    return (\n        <ThemeProvider theme={darkmode ? darkTheme : lightTheme}>\n            <GlobalStyle />\n            <ToggleThemeButton onClick={toggleDarkMode}>{darkmode ? \"üåû\" : \"üåö\"}</ToggleThemeButton>\n            <Router />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,IAAIC,iBAAiB,EAAEC,aAAa,QAAQ,mBAAmB;AAC5E,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAO,WAAW;AAClB,SAASC,UAAU,EAAEC,SAAS,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAGR,iBAAiB;AACriBAAkBF,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACE,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GA1IIL,WAAW;AA4IjB,MAAMM,iBAAiB,GAAGf,MAAM,CAACgB,MAAM;AACvC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAAC,GAAA,GAjBMF,iBAAiB;AAmBvB,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IACzBD,WAAW,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,oBACIf,OAAA,CAACN,aAAa;IAACS,KAAK,EAAES,QAAQ,GAAGd,SAAS,GAAGD,UAAW;IAAAmB,QAAA,gBACpDhB,OAAA,CAACC,WAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfpB,OAAA,CAACO,iBAAiB;MAACc,OAAO,EAAEP,cAAe;MAAAE,QAAA,EAAEJ,QAAQ,GAAG,IAAI,GAAG;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC,eACxFpB,OAAA,CAACJ,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAExB;AAACT,EAAA,CAdQD,GAAG;AAAAY,GAAA,GAAHZ,GAAG;AAgBZ,eAAeA,GAAG;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}