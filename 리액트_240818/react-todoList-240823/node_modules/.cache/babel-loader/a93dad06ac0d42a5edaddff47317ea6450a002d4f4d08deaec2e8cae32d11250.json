{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/HK_local/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173_240818/src/components/CreateToDo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { toDoState, categoryState, Categories, resetFormState } from \"./atoms\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n    font-size: 20px;\n    margin: 10px 0;\n    padding: 5px;\n    border: 1px solid #999;\n    border-radius: 20px;\n`;\n_c = Button;\nconst Input = styled.input`\n    border: none;\n    background: #f1f1f1;\n    padding: 10px;\n    font-size: 20px;\n`;\n_c2 = Input;\nfunction CreateToDo() {\n  _s();\n  const formState = useRecoilValue(resetFormState);\n  const setToDos = useSetRecoilState(toDoState); // modi 함수\n  const myCategory = useRecoilValue(categoryState); // value\n  const {\n    handleSubmit,\n    register,\n    setValue,\n    reset\n  } = useForm();\n  useEffect(() => {\n    const savedToDos = JSON.parse(localStorage.getItem(\"toDos\") || \"[]\");\n    setToDos(savedToDos); // 초기값 설정\n  }, [setToDos]);\n\n  // formState가 변경될 때마다 폼 리셋\n  useEffect(() => {\n    reset(); // 폼 값을 초기화\n  }, [formState, reset]);\n  const handleValid = ({\n    toDo,\n    id\n  }) => {\n    if (myCategory === Categories.DELETE) {\n      setToDos(prevToDos => {\n        const updatedToDos = prevToDos.filter(todo => todo.id !== id);\n        localStorage.setItem(\"toDos\", JSON.stringify(updatedToDos));\n        return updatedToDos;\n      });\n    } else {\n      setToDos(prevToDos => {\n        const newToDo = {\n          text: toDo,\n          id: Date.now(),\n          category: myCategory\n        };\n        const updatedToDos = [newToDo, ...prevToDos];\n        localStorage.setItem(\"toDos\", JSON.stringify(updatedToDos));\n\n        // 상태 업데이트 후 localStorage 저장\n        return updatedToDos;\n      });\n    }\n\n    // set the value of a registered field\n    setValue(\"toDo\", \"\"); // clear input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleValid),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ...register(\"toDo\", {\n        required: \"Please write a thing to do\"\n      }),\n      placeholder: \"Please write a thing to do.\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateToDo, \"MUG+RauGh0dr89WiX1ZDHombLs0=\", false, function () {\n  return [useRecoilValue, useSetRecoilState, useRecoilValue, useForm];\n});\n_c3 = CreateToDo;\nexport default CreateToDo;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"CreateToDo\");","map":{"version":3,"names":["React","useEffect","useForm","useSetRecoilState","useRecoilValue","toDoState","categoryState","Categories","resetFormState","styled","jsxDEV","_jsxDEV","Button","button","_c","Input","input","_c2","CreateToDo","_s","formState","setToDos","myCategory","handleSubmit","register","setValue","reset","savedToDos","JSON","parse","localStorage","getItem","handleValid","toDo","id","DELETE","prevToDos","updatedToDos","filter","todo","setItem","stringify","newToDo","text","Date","now","category","onSubmit","style","display","flexDirection","children","required","placeholder","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/imac/Documents/HK_local/리액트_240818/src/components/CreateToDo.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSetRecoilState, useRecoilValue, useRecoilState } from \"recoil\";\nimport { toDoState, IToDo, categoryState, Categories, resetFormState } from \"./atoms\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n    font-size: 20px;\n    margin: 10px 0;\n    padding: 5px;\n    border: 1px solid #999;\n    border-radius: 20px;\n`;\n\nconst Input = styled.input`\n    border: none;\n    background: #f1f1f1;\n    padding: 10px;\n    font-size: 20px;\n`;\n\ninterface IForm {\n    toDo: string;\n    id?: number;\n}\n\nfunction CreateToDo() {\n    const formState = useRecoilValue(resetFormState);\n    const setToDos = useSetRecoilState(toDoState); // modi 함수\n    const myCategory = useRecoilValue(categoryState); // value\n    const { handleSubmit, register, setValue, reset } = useForm<IForm>();\n\n    useEffect(() => {\n        const savedToDos = JSON.parse(localStorage.getItem(\"toDos\") || \"[]\");\n        setToDos(savedToDos); // 초기값 설정\n    }, [setToDos]);\n\n    // formState가 변경될 때마다 폼 리셋\n    useEffect(() => {\n        reset(); // 폼 값을 초기화\n    }, [formState, reset]);\n\n    const handleValid = ({ toDo, id }: IForm) => {\n        if (myCategory === Categories.DELETE) {\n            setToDos((prevToDos) => {\n                const updatedToDos = prevToDos.filter((todo) => todo.id !== id);\n                localStorage.setItem(\"toDos\", JSON.stringify(updatedToDos));\n                return updatedToDos;\n            });\n        } else {\n            setToDos((prevToDos) => {\n                const newToDo = { text: toDo, id: Date.now(), category: myCategory };\n                const updatedToDos = [newToDo, ...prevToDos];\n\n                localStorage.setItem(\"toDos\", JSON.stringify(updatedToDos));\n\n                // 상태 업데이트 후 localStorage 저장\n                return updatedToDos;\n            });\n        }\n\n        // set the value of a registered field\n        setValue(\"toDo\", \"\"); // clear input field\n    };\n\n    return (\n        <form onSubmit={handleSubmit(handleValid)} style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <Input\n                {...register(\"toDo\", {\n                    required: \"Please write a thing to do\",\n                })}\n                placeholder=\"Please write a thing to do.\"\n                autoFocus\n            />\n\n            <Button>Add</Button>\n        </form>\n    );\n}\n\nexport default CreateToDo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}