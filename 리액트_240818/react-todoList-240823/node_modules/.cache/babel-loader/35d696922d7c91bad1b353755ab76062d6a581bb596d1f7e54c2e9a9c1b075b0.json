{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/HK_local/test-new/src/ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n// function ToDoList() {\n\n//     const [toDo, setToDo] = useState(\"\");\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\n//         const {\n//             currentTarget: { value },\n//         } = e;\n\n//         setToDo(value);\n//     };\n\n//     const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n//         e.preventDefault();\n//         console.log(toDo);\n//     };\n\n//     return (\n//         <div>\n//             <form onSubmit={onSubmit}>\n//                 <input value={toDo} onChange={onChange} type=\"text\" placeholder=\"todo\" />\n//                 <button>Add</button>\n//             </form>\n//         </div>\n//     );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onValid = data => {};\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onValid),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"email\", {\n          required: \"Email is required\",\n          pattern: {\n            value: /^[A-Za-z0-9._%+-]+@naver.com$/,\n            message: \"Only naver.com emails allowed\"\n          }\n        }),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"firstName\", {\n          required: true\n        }),\n        type: \"text\",\n        placeholder: \"first name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"lastName\", {\n          required: true\n        }),\n        type: \"text\",\n        placeholder: \"last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"userName\", {\n          required: true,\n          minLength: 5\n        }),\n        type: \"text\",\n        placeholder: \"userName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"passWord\", {\n          required: \"password is required\",\n          minLength: {\n            value: 5,\n            message: \"password is too short\"\n          }\n        }),\n        type: \"text\",\n        placeholder: \"passWord\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n//React.ChangeEventHandler<HTMLInputElement>\n_s(ToDoList, \"RyzdsH99oRiC6Tk17zdHQ1P7Rik=\", false, function () {\n  return [useForm];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useForm","jsxDEV","_jsxDEV","ToDoList","_s","register","handleSubmit","formState","errors","onValid","data","console","log","children","onSubmit","required","pattern","value","message","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","minLength","_c","$RefreshReg$"],"sources":["/Users/imac/Documents/HK_local/test-new/src/ToDoList.tsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n// function ToDoList() {\n\n//     const [toDo, setToDo] = useState(\"\");\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\n//         const {\n//             currentTarget: { value },\n//         } = e;\n\n//         setToDo(value);\n//     };\n\n//     const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n//         e.preventDefault();\n//         console.log(toDo);\n//     };\n\n//     return (\n//         <div>\n//             <form onSubmit={onSubmit}>\n//                 <input value={toDo} onChange={onChange} type=\"text\" placeholder=\"todo\" />\n//                 <button>Add</button>\n//             </form>\n//         </div>\n//     );\n// }\n\nfunction ToDoList() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const onValid = (data: any) => {};\n    console.log(errors);\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onValid)}>\n                <input\n                    {...register(\"email\", {\n                        required: \"Email is required\",\n                        pattern: {\n                            value: /^[A-Za-z0-9._%+-]+@naver.com$/,\n                            message: \"Only naver.com emails allowed\",\n                        },\n                    })}\n                    placeholder=\"Email\"\n                />\n                {/* <span>{errors.email.message}</span> */}\n                <input {...register(\"firstName\", { required: true })} type=\"text\" placeholder=\"first name\" />\n                <input {...register(\"lastName\", { required: true })} type=\"text\" placeholder=\"last name\" />\n                <input {...register(\"userName\", { required: true, minLength: 5 })} type=\"text\" placeholder=\"userName\" />\n                <input {...register(\"passWord\", { required: \"password is required\", minLength: { value: 5, message: \"password is too short\" } })} type=\"text\" placeholder=\"passWord\" />\n                <button>Add</button>\n            </form>\n        </div>\n    );\n}\n\n//React.ChangeEventHandler<HTMLInputElement>\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,QAAQ,iBAAiB;;AAEzC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IACFC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACxB,CAAC,GAAGR,OAAO,CAAC,CAAC;EACb,MAAMS,OAAO,GAAIC,IAAS,IAAK,CAAC,CAAC;EACjCC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EAEnB,oBACIN,OAAA;IAAAW,QAAA,eACIX,OAAA;MAAMY,QAAQ,EAAER,YAAY,CAACG,OAAO,CAAE;MAAAI,QAAA,gBAClCX,OAAA;QAAA,GACQG,QAAQ,CAAC,OAAO,EAAE;UAClBU,QAAQ,EAAE,mBAAmB;UAC7BC,OAAO,EAAE;YACLC,KAAK,EAAE,+BAA+B;YACtCC,OAAO,EAAE;UACb;QACJ,CAAC,CAAC;QACFC,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eAEFrB,OAAA;QAAA,GAAWG,QAAQ,CAAC,WAAW,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QAAES,IAAI,EAAC,MAAM;QAACL,WAAW,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7FrB,OAAA;QAAA,GAAWG,QAAQ,CAAC,UAAU,EAAE;UAAEU,QAAQ,EAAE;QAAK,CAAC,CAAC;QAAES,IAAI,EAAC,MAAM;QAACL,WAAW,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3FrB,OAAA;QAAA,GAAWG,QAAQ,CAAC,UAAU,EAAE;UAAEU,QAAQ,EAAE,IAAI;UAAEU,SAAS,EAAE;QAAE,CAAC,CAAC;QAAED,IAAI,EAAC,MAAM;QAACL,WAAW,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxGrB,OAAA;QAAA,GAAWG,QAAQ,CAAC,UAAU,EAAE;UAAEU,QAAQ,EAAE,sBAAsB;UAAEU,SAAS,EAAE;YAAER,KAAK,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAwB;QAAE,CAAC,CAAC;QAAEM,IAAI,EAAC,MAAM;QAACL,WAAW,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvKrB,OAAA;QAAAW,QAAA,EAAQ;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;;AAEA;AAAAnB,EAAA,CAjCSD,QAAQ;EAAA,QAKTH,OAAO;AAAA;AAAA0B,EAAA,GALNvB,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}