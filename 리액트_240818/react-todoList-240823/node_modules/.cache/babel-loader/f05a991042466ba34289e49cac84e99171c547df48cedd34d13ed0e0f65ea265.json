{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/HK_local/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173_240818/src/components/CreateToDo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { toDoState, categoryState } from \"./atoms\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n    font-size: 20px;\n    margin: 10px 0;\n    padding: 5px;\n    border: 1px solid #999;\n    border-radius: 20px;\n`;\n_c = Button;\nconst Input = styled.input`\n    border: none;\n    background: #f1f1f1;\n    padding: 10px;\n    font-size: 20px;\n`;\n_c2 = Input;\nfunction CreateToDo() {\n  _s();\n  const setToDos = useSetRecoilState(toDoState); // modi 함수\n  const myCategory = useRecoilValue(categoryState); // value\n  const {\n    handleSubmit,\n    register,\n    setValue\n  } = useForm();\n  const handleValid = ({\n    toDo\n  }) => {\n    setToDos(prevToDos => {\n      const newToDo = {\n        text: toDo,\n        id: Date.now(),\n        category: myCategory\n      };\n      const updatedToDos = [newToDo, ...prevToDos];\n      return updatedToDos;\n    });\n\n    // set the value of a registered field\n    setValue(\"toDo\", \"\"); // clear input field\n  };\n\n  // useEffect를 컴포넌트 최상위로 이동\n  useEffect(() => {\n    const savedToDos = JSON.parse(localStorage.getItem(\"toDos\") || \"[]\");\n    setToDos(savedToDos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"toDos\", JSON.stringify(toDos)); // toDos를 의존성으로 추가\n  }, [toDos]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleValid),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ...register(\"toDo\", {\n        required: \"Please write a thing to do\"\n      }),\n      placeholder: \"Please write a thing to do.\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateToDo, \"4CrNo5BIE/uYJW6wh0qs3ygamRQ=\", false, function () {\n  return [useSetRecoilState, useRecoilValue, useForm];\n});\n_c3 = CreateToDo;\nexport default CreateToDo;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"CreateToDo\");","map":{"version":3,"names":["React","useEffect","useForm","useSetRecoilState","useRecoilValue","toDoState","categoryState","styled","jsxDEV","_jsxDEV","Button","button","_c","Input","input","_c2","CreateToDo","_s","setToDos","myCategory","handleSubmit","register","setValue","handleValid","toDo","prevToDos","newToDo","text","id","Date","now","category","updatedToDos","savedToDos","JSON","parse","localStorage","getItem","setItem","stringify","toDos","onSubmit","style","display","flexDirection","children","required","placeholder","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/imac/Documents/HK_local/리액트_240818/src/components/CreateToDo.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { toDoState, IToDo, categoryState } from \"./atoms\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n    font-size: 20px;\n    margin: 10px 0;\n    padding: 5px;\n    border: 1px solid #999;\n    border-radius: 20px;\n`;\n\nconst Input = styled.input`\n    border: none;\n    background: #f1f1f1;\n    padding: 10px;\n    font-size: 20px;\n`;\n\ninterface IForm {\n    toDo: string;\n}\n\nfunction CreateToDo() {\n    const setToDos = useSetRecoilState(toDoState); // modi 함수\n    const myCategory = useRecoilValue(categoryState); // value\n    const { handleSubmit, register, setValue } = useForm<IForm>();\n\n    const handleValid = ({ toDo }: IForm) => {\n        setToDos((prevToDos) => {\n            const newToDo = { text: toDo, id: Date.now(), category: myCategory };\n            const updatedToDos = [newToDo, ...prevToDos];\n            return updatedToDos;\n        });\n\n        // set the value of a registered field\n        setValue(\"toDo\", \"\"); // clear input field\n    };\n\n    // useEffect를 컴포넌트 최상위로 이동\n    useEffect(() => {\n        const savedToDos = JSON.parse(localStorage.getItem(\"toDos\") || \"[]\");\n        setToDos(savedToDos);\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(\"toDos\", JSON.stringify(toDos)); // toDos를 의존성으로 추가\n    }, [toDos]);\n    return (\n        <form onSubmit={handleSubmit(handleValid)} style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <Input\n                {...register(\"toDo\", {\n                    required: \"Please write a thing to do\",\n                })}\n                placeholder=\"Please write a thing to do.\"\n                autoFocus\n            />\n\n            <Button>Add</Button>\n        </form>\n    );\n}\n\nexport default CreateToDo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,iBAAiB,EAAEC,cAAc,QAAQ,QAAQ;AAC1D,SAASC,SAAS,EAASC,aAAa,QAAQ,SAAS;AACzD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,MAAM;AAQZ,MAAMG,KAAK,GAAGN,MAAM,CAACO,KAAK;AAC1B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,KAAK;AAWX,SAASG,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGf,iBAAiB,CAACE,SAAS,CAAC,CAAC,CAAC;EAC/C,MAAMc,UAAU,GAAGf,cAAc,CAACE,aAAa,CAAC,CAAC,CAAC;EAClD,MAAM;IAAEc,YAAY;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGpB,OAAO,CAAQ,CAAC;EAE7D,MAAMqB,WAAW,GAAGA,CAAC;IAAEC;EAAY,CAAC,KAAK;IACrCN,QAAQ,CAAEO,SAAS,IAAK;MACpB,MAAMC,OAAO,GAAG;QAAEC,IAAI,EAAEH,IAAI;QAAEI,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEC,QAAQ,EAAEZ;MAAW,CAAC;MACpE,MAAMa,YAAY,GAAG,CAACN,OAAO,EAAE,GAAGD,SAAS,CAAC;MAC5C,OAAOO,YAAY;IACvB,CAAC,CAAC;;IAEF;IACAV,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;EAC1B,CAAC;;EAED;EACArB,SAAS,CAAC,MAAM;IACZ,MAAMgC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;IACpEnB,QAAQ,CAACe,UAAU,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAENhC,SAAS,CAAC,MAAM;IACZmC,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,SAAS,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX,oBACI/B,OAAA;IAAMgC,QAAQ,EAAErB,YAAY,CAACG,WAAW,CAAE;IAACmB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC3FpC,OAAA,CAACI,KAAK;MAAA,GACEQ,QAAQ,CAAC,MAAM,EAAE;QACjByB,QAAQ,EAAE;MACd,CAAC,CAAC;MACFC,WAAW,EAAC,6BAA6B;MACzCC,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAEF3C,OAAA,CAACC,MAAM;MAAAmC,QAAA,EAAC;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEf;AAACnC,EAAA,CAtCQD,UAAU;EAAA,QACEb,iBAAiB,EACfC,cAAc,EACYF,OAAO;AAAA;AAAAmD,GAAA,GAH/CrC,UAAU;AAwCnB,eAAeA,UAAU;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAsC,GAAA;AAAAC,YAAA,CAAA1C,EAAA;AAAA0C,YAAA,CAAAvC,GAAA;AAAAuC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}