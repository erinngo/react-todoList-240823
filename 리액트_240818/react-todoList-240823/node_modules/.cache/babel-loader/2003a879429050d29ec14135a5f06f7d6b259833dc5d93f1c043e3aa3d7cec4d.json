{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Downloads/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173_240818/src/components/ToDo.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { toDoState } from \"./atoms\";\nimport { useSetRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDo({\n  text,\n  category,\n  id\n}) {\n  _s();\n  const setToDos = useSetRecoilState(toDoState);\n\n  //1. 현재 버튼의 카테고리 추출\n  const onClickT = event => {\n    const {\n      currentTarget: {\n        name\n      }\n    } = event;\n    console.log(name);\n    // 2. 현재 클릭한 버튼의 index 추출\n\n    setToDos(oldToDos => {\n      const targetIndex = oldToDos.findIndex(each => each.id === id);\n      const oldToDo = oldToDos[targetIndex];\n\n      //new에서 바뀌는 것은 category, 나머지는 그대로 유지\n      const newToDo = {\n        text: text,\n        id: id,\n        category: name\n      };\n      return oldToDos;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), category !== \"DOING\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"DOING\",\n      onClick: onClickT,\n      children: \"Doing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), category !== \"TO_DO\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"TO_DO\",\n      onClick: onClickT,\n      children: \"To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), category !== \"DONE\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"DONE\",\n      onClick: onClickT,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDo, \"BR93yBPF8CYIHT/jsK8zidf9OVI=\", false, function () {\n  return [useSetRecoilState];\n});\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","toDoState","useSetRecoilState","jsxDEV","_jsxDEV","ToDo","text","category","id","_s","setToDos","onClickT","event","currentTarget","name","console","log","oldToDos","targetIndex","findIndex","each","oldToDo","newToDo","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/imac/Downloads/리액트_240818/src/components/ToDo.tsx"],"sourcesContent":["import React from \"react\";\nimport { IToDo, toDoState } from \"./atoms\";\nimport { useSetRecoilState } from \"recoil\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n    const setToDos = useSetRecoilState(toDoState);\n\n    //1. 현재 버튼의 카테고리 추출\n    const onClickT = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const {\n            currentTarget: { name },\n        } = event;\n\n        console.log(name);\n        // 2. 현재 클릭한 버튼의 index 추출\n\n        setToDos((oldToDos) => {\n            const targetIndex = oldToDos.findIndex((each) => each.id === id);\n\n            const oldToDo = oldToDos[targetIndex];\n\n            //new에서 바뀌는 것은 category, 나머지는 그대로 유지\n            const newToDo = { text: text, id: id, category: name };\n            return oldToDos;\n        });\n    };\n\n    return (\n        <li>\n            <span>{text}</span>\n\n            {category !== \"DOING\" && (\n                <button name=\"DOING\" onClick={onClickT}>\n                    Doing\n                </button>\n            )}\n            {category !== \"TO_DO\" && (\n                <button name=\"TO_DO\" onClick={onClickT}>\n                    To Do\n                </button>\n            )}\n            {category !== \"DONE\" && (\n                <button name=\"DONE\" onClick={onClickT}>\n                    Done\n                </button>\n            )}\n        </li>\n    );\n}\n\nexport default ToDo;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAgBC,SAAS,QAAQ,SAAS;AAC1C,SAASC,iBAAiB,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,IAAIA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAMC,QAAQ,GAAGR,iBAAiB,CAACD,SAAS,CAAC;;EAE7C;EACA,MAAMU,QAAQ,GAAIC,KAA0C,IAAK;IAC7D,MAAM;MACFC,aAAa,EAAE;QAAEC;MAAK;IAC1B,CAAC,GAAGF,KAAK;IAETG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB;;IAEAJ,QAAQ,CAAEO,QAAQ,IAAK;MACnB,MAAMC,WAAW,GAAGD,QAAQ,CAACE,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,KAAKA,EAAE,CAAC;MAEhE,MAAMa,OAAO,GAAGJ,QAAQ,CAACC,WAAW,CAAC;;MAErC;MACA,MAAMI,OAAO,GAAG;QAAEhB,IAAI,EAAEA,IAAI;QAAEE,EAAE,EAAEA,EAAE;QAAED,QAAQ,EAAEO;MAAK,CAAC;MACtD,OAAOG,QAAQ;IACnB,CAAC,CAAC;EACN,CAAC;EAED,oBACIb,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAOjB;IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAElBpB,QAAQ,KAAK,OAAO,iBACjBH,OAAA;MAAQU,IAAI,EAAC,OAAO;MAACc,OAAO,EAAEjB,QAAS;MAAAY,QAAA,EAAC;IAExC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX,EACApB,QAAQ,KAAK,OAAO,iBACjBH,OAAA;MAAQU,IAAI,EAAC,OAAO;MAACc,OAAO,EAAEjB,QAAS;MAAAY,QAAA,EAAC;IAExC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX,EACApB,QAAQ,KAAK,MAAM,iBAChBH,OAAA;MAAQU,IAAI,EAAC,MAAM;MAACc,OAAO,EAAEjB,QAAS;MAAAY,QAAA,EAAC;IAEvC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb;AAAClB,EAAA,CA5CQJ,IAAI;EAAA,QACQH,iBAAiB;AAAA;AAAA2B,EAAA,GAD7BxB,IAAI;AA8Cb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}